# =============================================================================
# Docker Secrets Configuration for Qwen2 Application
# =============================================================================
# This file defines secure secrets management for sensitive configuration
# data including passwords, API keys, certificates, and tokens

version: "3.8"

# Secrets definitions for Docker Compose
secrets:
  # Database credentials
  postgres_password:
    external: false
    file: ./secrets/postgres_password.txt
    labels:
      - "com.qwen.secret.type=database"
      - "com.qwen.secret.service=postgres"
      - "com.qwen.secret.description=PostgreSQL database password"

  postgres_user:
    external: false
    file: ./secrets/postgres_user.txt
    labels:
      - "com.qwen.secret.type=database"
      - "com.qwen.secret.service=postgres"
      - "com.qwen.secret.description=PostgreSQL database username"

  # Redis authentication
  redis_password:
    external: false
    file: ./secrets/redis_password.txt
    labels:
      - "com.qwen.secret.type=cache"
      - "com.qwen.secret.service=redis"
      - "com.qwen.secret.description=Redis authentication password"

  # API security keys
  api_secret_key:
    external: false
    file: ./secrets/api_secret_key.txt
    labels:
      - "com.qwen.secret.type=api"
      - "com.qwen.secret.service=api"
      - "com.qwen.secret.description=API server secret key for session management"

  jwt_secret_key:
    external: false
    file: ./secrets/jwt_secret_key.txt
    labels:
      - "com.qwen.secret.type=api"
      - "com.qwen.secret.service=api"
      - "com.qwen.secret.description=JWT token signing secret"

  # External API keys
  huggingface_token:
    external: false
    file: ./secrets/huggingface_token.txt
    labels:
      - "com.qwen.secret.type=external_api"
      - "com.qwen.secret.service=huggingface"
      - "com.qwen.secret.description=HuggingFace API token for model downloads"

  openai_api_key:
    external: false
    file: ./secrets/openai_api_key.txt
    labels:
      - "com.qwen.secret.type=external_api"
      - "com.qwen.secret.service=openai"
      - "com.qwen.secret.description=OpenAI API key for additional services"

  # SSL/TLS certificates
  ssl_certificate:
    external: false
    file: ./ssl/certificate.pem
    labels:
      - "com.qwen.secret.type=ssl"
      - "com.qwen.secret.service=traefik"
      - "com.qwen.secret.description=SSL certificate for HTTPS"

  ssl_private_key:
    external: false
    file: ./ssl/private_key.pem
    labels:
      - "com.qwen.secret.type=ssl"
      - "com.qwen.secret.service=traefik"
      - "com.qwen.secret.description=SSL private key for HTTPS"

  # Traefik dashboard authentication
  traefik_dashboard_auth:
    external: false
    file: ./secrets/traefik_dashboard_auth.txt
    labels:
      - "com.qwen.secret.type=auth"
      - "com.qwen.secret.service=traefik"
      - "com.qwen.secret.description=Traefik dashboard basic auth credentials"

  # Monitoring and metrics
  prometheus_auth:
    external: false
    file: ./secrets/prometheus_auth.txt
    labels:
      - "com.qwen.secret.type=monitoring"
      - "com.qwen.secret.service=prometheus"
      - "com.qwen.secret.description=Prometheus metrics authentication"

  grafana_admin_password:
    external: false
    file: ./secrets/grafana_admin_password.txt
    labels:
      - "com.qwen.secret.type=monitoring"
      - "com.qwen.secret.service=grafana"
      - "com.qwen.secret.description=Grafana admin user password"

# Configuration for secret file generation and management
x-secret-config: &secret-config # Default permissions for secret files
  default_permissions:
    mode: "0400"
    owner: "root"
    group: "root"

  # Secret rotation policy
  rotation_policy:
    enabled: true
    interval: "90d" # Rotate every 90 days
    backup_count: 3
    notification: true

  # Secret validation rules
  validation:
    min_length: 32
    complexity: high
    entropy_threshold: 4.0

  # Encryption settings
  encryption:
    algorithm: "AES-256-GCM"
    key_derivation: "PBKDF2"
    iterations: 100000

# Secret generation templates
x-secret-templates: &secret-templates # Database password template
  database_password:
    length: 64
    charset: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*"
    exclude_ambiguous: true

  # API key template
  api_key:
    length: 128
    charset: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    format: "base64"

  # JWT secret template
  jwt_secret:
    length: 256
    charset: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/="
    format: "base64"

# Environment-specific secret configurations
environments:
  development:
    secret_source: "file"
    encryption_enabled: false
    rotation_enabled: false

  staging:
    secret_source: "file"
    encryption_enabled: true
    rotation_enabled: true

  production:
    secret_source: "external" # Use external secret management
    encryption_enabled: true
    rotation_enabled: true
    backup_enabled: true
    audit_enabled: true

# External secret management integration
external_secrets:
  # HashiCorp Vault integration
  vault:
    enabled: false
    address: "https://vault.yourdomain.com"
    auth_method: "kubernetes"
    mount_path: "secret/qwen2"

  # AWS Secrets Manager integration
  aws_secrets_manager:
    enabled: false
    region: "us-west-2"
    secret_prefix: "qwen2/"

  # Azure Key Vault integration
  azure_key_vault:
    enabled: false
    vault_url: "https://qwen2-vault.vault.azure.net/"

  # Google Secret Manager integration
  google_secret_manager:
    enabled: false
    project_id: "qwen2-project"
    secret_prefix: "qwen2-"

# Secret audit and compliance
audit:
  # Audit logging configuration
  logging:
    enabled: true
    level: "info"
    destination: "/var/log/secrets/audit.log"
    format: "json"

  # Compliance frameworks
  compliance:
    soc2: true
    pci_dss: false
    hipaa: false
    gdpr: true

  # Access monitoring
  access_monitoring:
    enabled: true
    alert_on_access: true
    log_all_access: true

  # Integrity checking
  integrity_check:
    enabled: true
    algorithm: "sha256"
    schedule: "0 2 * * *" # Daily at 2 AM
