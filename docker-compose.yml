services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: qwen-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

  # API Server with DiffSynth Enhanced UI
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: qwen-api
    restart: unless-stopped
    volumes:
      - ./generated_images:/app/generated_images
      - ./uploads:/app/uploads
      - ./cache:/app/cache
      - ./models:/app/models
      - ./offload:/app/offload
      - ~/.cache/huggingface:/app/cache/huggingface
      - ~/.cache/torch:/app/cache/torch
    environment:
      - PYTHONPATH=/app/src
      - HF_HOME=/app/cache/huggingface
      - TORCH_HOME=/app/cache/torch
      - CUDA_VISIBLE_DEVICES=0
      - DIFFSYNTH_CACHE_DIR=/app/cache/diffsynth
      - CONTROLNET_CACHE_DIR=/app/cache/controlnet
      - ENABLE_DIFFSYNTH=true
      - ENABLE_CONTROLNET=true
      - MEMORY_OPTIMIZATION=true
      - TILED_PROCESSING_THRESHOLD=2048
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 16G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qwen-frontend
    restart: unless-stopped
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`qwen.localhost`) || Host(`frontend.localhost`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

networks:
  qwen-network:
    driver: bridge
