services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: qwen-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: qwen-api
    restart: unless-stopped
    volumes:
      - ./generated_images:/app/generated_images
      - ./uploads:/app/uploads
      - ~/.cache/huggingface:/root/.cache/huggingface
    environment:
      - PYTHONPATH=/app/src
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qwen-frontend
    restart: unless-stopped
    networks:
      - qwen-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`qwen.localhost`) || Host(`frontend.localhost`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

networks:
  qwen-network:
    driver: bridge
