# =============================================================================
# Development Nginx Configuration for Qwen2 Frontend
# =============================================================================

# Development-optimized nginx configuration with hot reload support
# This configuration is designed for development environments with:
# - Relaxed security for easier debugging
# - Enhanced logging for development insights
# - Hot reload proxy support
# - Development-friendly error pages

worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /tmp/nginx/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Development logging format (verbose)
    log_format dev_detailed '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" '
                           'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log dev_detailed;

    # Development performance settings (relaxed)
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Development gzip settings (basic)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Development upstream for backend API
    upstream backend_api {
        server qwen-api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Development server configuration
    server {
        listen 80;
        server_name localhost dev.localhost *.dev.localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Development security headers (relaxed)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Development-specific headers
        add_header X-Environment "development" always;
        add_header X-Debug-Mode "enabled" always;

        # Development error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Development info endpoint
        location /dev-info {
            alias /usr/share/nginx/html/dev-info.json;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API proxy with development settings
        location /api/ {
            proxy_pass http://backend_api/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Development timeouts (generous)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Development CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # WebSocket proxy for development
        location /ws/ {
            proxy_pass http://backend_api/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Static files with development caching (minimal)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1h;
            add_header Cache-Control "public, no-transform";
            add_header X-Environment "development";
            
            # Try compressed versions first in development
            location ~* \.(js|css)$ {
                gzip_static on;
                expires 1h;
            }
        }

        # Development source maps (allowed)
        location ~* \.map$ {
            expires 1h;
            add_header Cache-Control "public, no-transform";
            add_header X-Debug "source-map";
        }

        # React Router support (SPA)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header X-Environment "development";
        }

        # Development build info
        location /build-info {
            alias /usr/share/nginx/html/build-info.json;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache";
        }

        # Development debugging endpoints
        location /debug/ {
            alias /usr/share/nginx/html/debug/;
            autoindex on;
            add_header X-Debug-Access "enabled";
        }
    }
}