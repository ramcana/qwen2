# =============================================================================
# Security Headers Configuration for Qwen2 Frontend
# =============================================================================

# Content Security Policy - Optimized for React and API communication
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: blob: https:; connect-src 'self' ws: wss: http: https:; media-src 'self' blob:; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

# X-Frame-Options - Prevent clickjacking
add_header X-Frame-Options "DENY" always;

# X-Content-Type-Options - Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# X-XSS-Protection - Enable XSS filtering
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy - Control referrer information
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy - Control browser features
add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), fullscreen=(self), display-capture=()" always;

# Strict Transport Security (HTTPS only) - Force HTTPS
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Cross-Origin Embedder Policy - Enhanced security for cross-origin isolation
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy - Prevent cross-origin attacks
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Resource Policy - Control cross-origin resource sharing
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Cache Control for security-sensitive responses
add_header Cache-Control "no-cache, no-store, must-revalidate" always;
add_header Pragma "no-cache" always;
add_header Expires "0" always;

# Remove server information for security
server_tokens off;

# Additional security measures
# Server tokens are disabled via server_tokens off; directive above
# Note: more_clear_headers requires nginx-module-headers-more which is not available in Alpine base image

# Custom security headers for API responses
map $upstream_http_content_type $security_headers {
    default "nosniff";
    ~application/json "nosniff";
    ~text/html "nosniff";
}