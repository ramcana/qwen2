{
    "name": "qwen-image-react-ui",
    "version": "2.0.0",
    "description": "Modern React frontend for Qwen-Image Generator",
    "private": true,
    "dependencies": {
        "autoprefixer": "^10.4.21",
        "axios": "^1.12.2",
        "clsx": "^2.1.1",
        "lucide-react": "^0.544.0",
        "postcss": "^8.4.31",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "react-dropzone": "^14.3.8",
        "react-hook-form": "^7.63.0",
        "react-hot-toast": "^2.6.0",
        "@tanstack/react-query": "^4.36.1",
        "react-scripts": "5.0.1",
        "tailwindcss": "^3.4.17",
        "typescript": "^5.6.3",
        "@types/node": "^18.19.68",
        "@types/react": "^18.3.24",
        "@types/react-dom": "^18.3.7"
    },
    "devDependencies": {
        "@testing-library/dom": "^10.4.0",
        "@testing-library/jest-dom": "^6.8.0",
        "@testing-library/react": "^16.3.0",
        "@testing-library/user-event": "^14.6.1",
        "@types/jest": "^29.5.14",
        "env-cmd": "^10.1.0",
        "js-yaml": "^4.1.0",
        "webpack-bundle-analyzer": "^4.10.2"
    },
    "scripts": {
        "start": "GENERATE_SOURCEMAP=false react-scripts start",
        "start:dev": "env-cmd -f .env.development react-scripts start",
        "start:staging": "env-cmd -f .env.staging react-scripts start",
        "build": "GENERATE_SOURCEMAP=false react-scripts build",
        "build:development": "env-cmd -f .env.development react-scripts build",
        "build:staging": "env-cmd -f .env.staging react-scripts build",
        "build:production": "env-cmd -f .env.production react-scripts build",
        "build:analyze": "npm run build:production && npx webpack-bundle-analyzer build/static/js/*.js",
        "test": "react-scripts test",
        "test:ci": "react-scripts test --coverage --ci --watchAll=false",
        "test:dev": "env-cmd -f .env.development react-scripts test",
        "test:staging": "env-cmd -f .env.staging react-scripts test --ci --watchAll=false",
        "eject": "react-scripts eject",
        "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,md}\"",
        "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
        "lint:fix": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
        "analyze": "npm run build && npx serve -s build",
        "validate": "node build-validation.js",
        "validate:full": "node build-validation.js full",
        "validate:env": "node scripts/validate-env.js",
        "build-variants": "node scripts/build-variants.js",
        "build:variant:dev": "node scripts/build-variants.js build development",
        "build:variant:staging": "node scripts/build-variants.js build staging",
        "build:variant:prod": "node scripts/build-variants.js build production",
        "test:variant:dev": "node scripts/build-variants.js test development",
        "test:variant:staging": "node scripts/build-variants.js test staging",
        "test:variant:prod": "node scripts/build-variants.js test production",
        "deploy:variant:dev": "node scripts/build-variants.js deploy development",
        "deploy:variant:staging": "node scripts/build-variants.js deploy staging",
        "deploy:variant:prod": "node scripts/build-variants.js deploy production",
        "docker:dev": "docker-compose -f docker-compose.dev.yml up --build",
        "docker:staging": "docker-compose -f docker-compose.staging.yml up --build",
        "docker:prod": "docker-compose -f docker-compose.optimized.yml up --build",
        "docker:build:dev": "docker build -f Dockerfile.dev -t qwen-frontend:dev .",
        "docker:build:staging": "docker build -f Dockerfile.prod --target production -t qwen-frontend:staging --build-arg NODE_ENV=production --build-arg REACT_APP_ENVIRONMENT=staging .",
        "docker:build:prod": "docker build -f Dockerfile.prod --target production -t qwen-frontend:prod --build-arg NODE_ENV=production --build-arg REACT_APP_ENVIRONMENT=production .",
        "docker:build:variant:dev": "node scripts/build-variants.js build development --docker",
        "docker:build:variant:staging": "node scripts/build-variants.js build staging --docker",
        "docker:build:variant:prod": "node scripts/build-variants.js build production --docker",
        "test:docker": "node docker-build-test.js",
        "test:docker:keep": "node docker-build-test.js test --no-cleanup",
        "test:automated": "node automated-build-test.js",
        "validate:build": "bash validate-build.sh",
        "validate:build:full": "bash validate-build.sh --full",
        "validate:variants": "node validate-build-variants.js",
        "validate:variants:dev": "node validate-build-variants.js development",
        "validate:variants:staging": "node validate-build-variants.js staging",
        "validate:variants:prod": "node validate-build-variants.js production",
        "test:build": "bash test-docker-build.sh",
        "clean": "rm -rf build build-dev node_modules/.cache",
        "clean:docker": "docker system prune -f && docker volume prune -f",
        "clean:variants": "rm -rf build-* *.log build-report-*.json"
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    },
    "overrides": {
        "nth-check": "^2.1.1",
        "css-select": "^5.1.0",
        "svgo": "^3.3.2"
    }
}